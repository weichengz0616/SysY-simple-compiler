decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

global @ga_0 = alloc [i32, 10], zeroinit

global @gb_0 = alloc [[i32, 3], 2], {{5, 6, 7}, {8, 0, 0}}

fun @main(): i32
{
%entry:
	@a_2 = alloc [i32, 10]
	@b_2 = alloc [[i32, 3], 2]
	%0 = getelemptr @b_2, 0
	%1 = getelemptr %0, 0
	store 1, %1
	%2 = getelemptr @b_2, 0
	%3 = getelemptr %2, 1
	store 2, %3
	%4 = getelemptr @b_2, 0
	%5 = getelemptr %4, 2
	store 3, %5
	%6 = getelemptr @b_2, 1
	%7 = getelemptr %6, 0
	store 4, %7
	%8 = getelemptr @b_2, 1
	%9 = getelemptr %8, 1
	store 0, %9
	%10 = getelemptr @b_2, 1
	%11 = getelemptr %10, 2
	store 0, %11
	@sum_2 = alloc i32
	store 0 , @sum_2
	@i_2 = alloc i32
	store 0 , @i_2
	jump %while_entry_0
%while_entry_0:
	%12 = load @i_2
	%13 = lt %12, 2
	br %13, %while_body_0, %while_end_0
%while_body_0:
	@j_3 = alloc i32
	store 0 , @j_3
	jump %while_entry_1
%while_entry_1:
	%14 = load @j_3
	%15 = lt %14, 3
	br %15, %while_body_1, %while_end_1
%while_body_1:
	%16 = load @sum_2
	%17 = load @i_2
	%18 = load @j_3
	%19 = getelemptr @b_2, %17
	%20 = getelemptr %19, %18
	%21 = load %20
	%22 = add %16, %21
	%23 = load @i_2
	%24 = load @j_3
	%25 = getelemptr @gb_0, %23
	%26 = getelemptr %25, %24
	%27 = load %26
	%28 = add %22, %27
	store %28 , @sum_2
	%29 = load @j_3
	%30 = add %29, 1
	store %30 , @j_3
	jump %while_entry_1
%while_end_1:
	%31 = load @i_2
	%32 = add %31, 1
	store %32 , @i_2
	jump %while_entry_0
%while_end_0:
	store 0 , @i_2
	jump %while_entry_2
%while_entry_2:
	%33 = load @i_2
	%34 = lt %33, 10
	br %34, %while_body_2, %while_end_2
%while_body_2:
	%35 = load @sum_2
	%36 = load @i_2
	%37 = add %35, %36
	%38 = load @i_2
	%39 = getelemptr @a_2, %38
	store %37 , %39
	%40 = load @sum_2
	%41 = load @i_2
	%42 = add %40, %41
	%43 = load @i_2
	%44 = getelemptr @ga_0, %43
	store %42 , %44
	%45 = load @i_2
	%46 = add %45, 1
	store %46 , @i_2
	jump %while_entry_2
%while_end_2:
	%47 = load @sum_2
	ret %47
}

